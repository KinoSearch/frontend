{"version":3,"file":"static/js/327.aa393f3e.chunk.js","mappings":"+MAqDA,MA/BA,YAAwE,IAAxDA,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,SACrB,OACC,SAAC,KAAD,CACCC,KAAMD,EAAW,OAAS,QAC1BE,EAAGF,EAAW,OAAS,QACvBG,KAAMH,EAAW,OAAS,QAH3B,UAKC,SAAC,KAAD,CAAKI,GAAIC,EAAAA,GAAOC,GAAE,gBAAWP,EAAKQ,aAAeR,EAAKS,QAAtD,UACC,UAAC,KAAD,CAAOC,UAAU,SAASC,QAAQ,OAAlC,WACC,SAAC,EAAAC,cAAD,CACCC,IAAKb,EAAKc,UACVC,MAAOd,EAAW,OAAS,QAC3Be,OAAQf,EAAW,OAAS,QAC5BgB,UAAU,eACVC,OAAO,UAER,SAAC,KAAD,CACCC,KAAK,KACLf,KAAMH,EAAW,OAAS,QAC1BmB,SAAS,SACTC,aAAa,WACbC,WAAYrB,EAAW,SAAW,SALnC,SAOED,EAAKuB,QAAUvB,EAAKwB,QAAUxB,EAAKyB,qBAMzC,C,oLC2DD,UA9FA,WACC,OAAsCC,EAAAA,EAAAA,MAAtC,eAAKC,EAAL,KAAmBC,EAAnB,KACA,EAA8BC,EAAAA,SAAoB,IAAlD,eAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,EAAAA,UAAwB,GAAxD,eAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,EAAAA,UAAwB,GAA1D,eAAOK,EAAP,KAAkBC,EAAlB,KAEAN,EAAAA,WAAgB,WACf,IAAMO,EAAM,yCAAG,kGACdD,GAAa,GADC,kBAGeE,IAAAA,IAC3BC,UAAU,GAAD,OACLC,EAAAA,EAAAA,WADK,4CAEPZ,EAAaa,IAAI,MAAQ,KAG3B,CACCC,QAAS,CACR,YAAaF,EAAAA,EAAAA,aAXH,gBAGCG,EAHD,EAGLC,KAYRZ,EAAWW,EAAIE,OACU,IAArBF,EAAIE,MAAMC,OACbZ,GAAY,GAEZA,GAAY,GAnBA,uBAsBbE,GAAa,GAtBA,yEAAH,qDAyBZC,GAEA,GAAE,CAACT,EAAaa,IAAI,OAKrB,OAAmCM,EAAAA,EAAAA,MAA3BC,EAAR,EAAQA,SAEFC,GAAWC,EAFjB,EAAkBA,eAEY,SAACN,GAC9Bf,EAAgB,CAAEsB,EAAGP,EAAKO,GAC1B,IAED,OACC,iCACC,SAAC,KAAD,CAAWC,WAAY,GAAvB,UACC,iBAAMH,SAAUA,EAAhB,UACC,SAAC,MAAD,QACCI,aAAczB,EAAaa,IAAI,MAAQ,GACvCa,YAAY,iCACZC,YAAY,UACZC,aAAa,OACbC,iBAAiB,YACjBC,aAAc,CAAEC,SAAU,OAAQC,MAAO,UACrCZ,EAAS,YAIhB,SAAC,KAAD,CAAKI,WAAY,GAAjB,UACIjB,IACF,8BACGF,IACD,SAAC,KAAD,WACC,SAAC,KAAD,+GAGD,iCACC,SAAC,KAAD,CAAS4B,WAAW,MAAMzC,KAAK,KAA/B,gHAGA,SAAC,KAAD,CAAKgC,WAAY,EAAjB,UACC,SAAC,KAAD,CAAYU,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAIlD,QAAQ,OAAjD,SACEmB,EAAQgC,KAAI,SAAC9D,GAAD,OACZ,SAAC,IAAD,CAAMA,KAAMA,EAAMC,UAAQ,GADd,eASlB,SAAC,KAAD,CAAKE,EAAE,OAAP,UACC,SAAC,KAAD,WACC,SAAC,IAAD,CAASwD,MAAM,YAAYxC,KAAK,eAOtC,C","sources":["components/Film.tsx","pages/Search.tsx"],"sourcesContent":["import React from \"react\";\nimport { Box, Heading, Stack } from \"@chakra-ui/react\";\nimport { Link as RLink } from \"react-router-dom\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport \"../css/Film.css\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\n\ninterface IFilm {\n\tkinopoiskId: number | undefined;\n\tfilmId: number | undefined;\n\tnameRu: any;\n\tnameEn: any;\n\tnameOriginal: any;\n\tyear?: number;\n\tposterUrl: string;\n\tposterUrlPreview: string;\n\tcountries?: any;\n\tgenres?: any;\n\tduration?: number | null | undefined;\n\tpremiereRu?: string | null | undefined;\n}\n\nfunction Film({ film, isSearch }: { film: IFilm; isSearch?: boolean }) {\n\treturn (\n\t\t<Box\n\t\t\tminW={isSearch ? \"full\" : \"140px\"}\n\t\t\tw={isSearch ? \"full\" : \"140px\"}\n\t\t\tmaxW={isSearch ? \"full\" : \"140px\"}\n\t\t>\n\t\t\t<Box as={RLink} to={`/film/${film.kinopoiskId || film.filmId}`}>\n\t\t\t\t<Stack direction=\"column\" spacing=\"10px\">\n\t\t\t\t\t<LazyLoadImage\n\t\t\t\t\t\tsrc={film.posterUrl}\n\t\t\t\t\t\twidth={isSearch ? \"auto\" : \"140px\"}\n\t\t\t\t\t\theight={isSearch ? \"auto\" : \"210px\"}\n\t\t\t\t\t\tclassName=\"poster_image\"\n\t\t\t\t\t\teffect=\"blur\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Heading\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tmaxW={isSearch ? \"full\" : \"140px\"}\n\t\t\t\t\t\toverflow=\"hidden\"\n\t\t\t\t\t\ttextOverflow=\"ellipsis\"\n\t\t\t\t\t\twhiteSpace={isSearch ? \"normal\" : \"nowrap\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t{film.nameRu || film.nameEn || film.nameOriginal}\n\t\t\t\t\t</Heading>\n\t\t\t\t</Stack>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n}\n\nexport default Film;\n","import React from \"react\";\nimport {\n\tBox,\n\tContainer,\n\tInput,\n\tHeading,\n\tSimpleGrid,\n\tCenter,\n\tSpinner,\n} from \"@chakra-ui/react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport config from \"../config\";\nimport { useForm } from \"react-hook-form\";\nimport Film from \"../components/Film\";\n\nfunction Search() {\n\tlet [searchParams, setSearchParams] = useSearchParams();\n\tconst [results, setResults] = React.useState<any>([]);\n\tconst [notFound, setNotFound] = React.useState<boolean>(false);\n\tconst [isLoading, setIsLoading] = React.useState<boolean>(false);\n\n\tReact.useEffect(() => {\n\t\tconst search = async () => {\n\t\t\tsetIsLoading(true);\n\t\t\ttry {\n\t\t\t\tconst { data: res } = await axios.get(\n\t\t\t\t\tencodeURI(\n\t\t\t\t\t\t`${config.search_url}/films/search-by-keyword?keyword=${\n\t\t\t\t\t\t\tsearchParams.get(\"q\") || \"\"\n\t\t\t\t\t\t}`\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"X-API-KEY\": config.api_token,\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetResults(res.films);\n\t\t\t\tif (res.films.length === 0) {\n\t\t\t\t\tsetNotFound(true);\n\t\t\t\t} else {\n\t\t\t\t\tsetNotFound(false);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t};\n\t\tsearch();\n\t\t// eslint-disable-next-line\n\t}, [searchParams.get(\"q\")]);\n\n\ttype FormData = {\n\t\tq: string;\n\t};\n\tconst { register, handleSubmit } = useForm<FormData>();\n\n\tconst onSubmit = handleSubmit((data) => {\n\t\tsetSearchParams({ q: data.q });\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<Container paddingTop={20}>\n\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tdefaultValue={searchParams.get(\"q\") || \"\"}\n\t\t\t\t\t\tplaceholder=\"Поиск\"\n\t\t\t\t\t\tborderColor=\"#929292\"\n\t\t\t\t\t\tborderRadius=\"20px\"\n\t\t\t\t\t\tfocusBorderColor=\"brand.500\"\n\t\t\t\t\t\t_placeholder={{ fontSize: \"16px\", color: \"white\" }}\n\t\t\t\t\t\t{...register(\"q\")}\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t</Container>\n\t\t\t<Box paddingTop={10}>\n\t\t\t\t{(!isLoading && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{(notFound && (\n\t\t\t\t\t\t\t<Center>\n\t\t\t\t\t\t\t\t<Heading>Ничего не найдено</Heading>\n\t\t\t\t\t\t\t</Center>\n\t\t\t\t\t\t)) || (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Heading fontWeight=\"700\" size=\"lg\">\n\t\t\t\t\t\t\t\t\tРезультаты поиска\n\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t<Box paddingTop={5}>\n\t\t\t\t\t\t\t\t\t<SimpleGrid columns={[2, 3, 4, 5, 6, 7]} spacing=\"20px\">\n\t\t\t\t\t\t\t\t\t\t{results.map((film: any) => (\n\t\t\t\t\t\t\t\t\t\t\t<Film film={film} isSearch />\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</SimpleGrid>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)) || (\n\t\t\t\t\t<Box w=\"full\">\n\t\t\t\t\t\t<Center>\n\t\t\t\t\t\t\t<Spinner color=\"brand.500\" size=\"xl\" />\n\t\t\t\t\t\t</Center>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t</Box>\n\t\t</>\n\t);\n}\n\nexport default Search;\n"],"names":["film","isSearch","minW","w","maxW","as","RLink","to","kinopoiskId","filmId","direction","spacing","LazyLoadImage","src","posterUrl","width","height","className","effect","size","overflow","textOverflow","whiteSpace","nameRu","nameEn","nameOriginal","useSearchParams","searchParams","setSearchParams","React","results","setResults","notFound","setNotFound","isLoading","setIsLoading","search","axios","encodeURI","config","get","headers","res","data","films","length","useForm","register","onSubmit","handleSubmit","q","paddingTop","defaultValue","placeholder","borderColor","borderRadius","focusBorderColor","_placeholder","fontSize","color","fontWeight","columns","map"],"sourceRoot":""}